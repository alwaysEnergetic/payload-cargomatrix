/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    locations: Location;
    locationTypes: LocationType;
    pages: Page;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    settings: Setting;
    homepage: Homepage;
    header: Header;
    login: Login;
    register: Register;
    resetPassword: ResetPassword;
    forgotPassword: ForgotPassword;
  };
  locale: 'en' | 'fr' | 'es';
  user: User & {
    collection: 'users';
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  locations?: (number | Location)[] | null;
  roles?: ('admin' | 'staff')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  name: string;
  type?: (number | null) | LocationType;
  page: number | Page;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locationTypes".
 */
export interface LocationType {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  publishedOn?: string | null;
  layout: (
    | {
        layoutType:
          | 'simple-centered'
          | 'split-screenshot'
          | 'split-code-example'
          | 'simple-centered-bg'
          | 'app-screenshot'
          | 'phone-mockup'
          | 'split-image'
          | 'angled-image-right'
          | 'image-tiles'
          | 'offset-image';
        title: string;
        description?: string | null;
        announcement?: boolean | null;
        announcementText?: string | null;
        announcementUrl?: string | null;
        logo?: boolean | null;
        logoImage?: number | Media | null;
        trackingCode?: string | null;
        backgroundImage?: number | Media | null;
        imageUrl?: number | Media | null;
        imageTiles?:
          | {
              image: number | Media;
              id?: string | null;
            }[]
          | null;
        links?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label: string;
                appearance?:
                  | ('default' | 'primary' | 'secondary' | 'destructive' | 'outline' | 'ghost' | 'link')
                  | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'hero';
      }
    | {
        layoutType:
          | 'product-screenshot'
          | 'centered-2x2'
          | 'large-screenshot-dark'
          | 'large-screenshot'
          | 'three-column-small-icons-dark'
          | 'three-column-small-icons'
          | 'product-screenshot-left'
          | 'product-screenshot-dark'
          | 'three-column-large-icons-dark'
          | 'three-column-large-icons'
          | 'contained-panel'
          | 'product-screenshot-panel'
          | 'testimonial'
          | 'offset-2x2'
          | 'code-example-panel'
          | 'offset-feature-list'
          | 'simple'
          | 'two-column-small-icons-dark';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        feature_item?:
          | {
              icon?: boolean | null;
              iconImage?: number | Media | null;
              title?: string | null;
              caption?: string | null;
              id?: string | null;
            }[]
          | null;
        productScreenshot?: number | Media | null;
        img_position?: ('left' | 'right') | null;
        largeScreenshot?: number | Media | null;
        codeExampleImage?: number | Media | null;
        icons?:
          | {
              icon: number | Media;
              title: string;
              description?: string | null;
              id?: string | null;
            }[]
          | null;
        testimonial?: string | null;
        featureList?:
          | {
              title: string;
              description?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'featureSection';
      }
    | {
        layoutType:
          | 'simple-centered'
          | 'simple-justified'
          | 'simple-inline'
          | 'simple-stacked'
          | 'split-image'
          | 'background-image'
          | 'logo-grid'
          | 'testimonial'
          | 'video'
          | 'two-columns-image'
          | 'two-columns-bullets'
          | 'offset-bullets';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        imageUrl?: number | Media | null;
        logoGrid?:
          | {
              logo: number | Media;
              id?: string | null;
            }[]
          | null;
        testimonial?: string | null;
        videoUrl?: string | null;
        bullets?:
          | {
              bullet: string;
              id?: string | null;
            }[]
          | null;
        ctaButtons?:
          | {
              label: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        layoutType:
          | 'simple-list-avatars'
          | 'grid-background'
          | 'large-avatars'
          | 'simple-centered'
          | 'simple-list-social-icons'
          | 'grid-simple-overlays'
          | 'grid-rounded-corners'
          | 'with-bio'
          | 'offset-images'
          | 'vertical-list';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        teamMembers?:
          | {
              name: string;
              role: string;
              imageUrl: number | Media;
              bio?: string | null;
              location?: string | null;
              socialMediaUrls?:
                | {
                    platform?: string | null;
                    url?: string | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'team';
      }
    | {
        layoutType:
          | 'simple-centered'
          | 'split-image'
          | 'simple-background'
          | 'simple-large-heading'
          | 'offset-background'
          | 'split-screenshot'
          | 'alternating-background'
          | 'with-bullets'
          | 'with-cards'
          | 'split-feature-list'
          | 'with-grid'
          | 'split-testimonial';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        imageUrl?: number | Media | null;
        faqItems?:
          | {
              question: string;
              answer: string;
              id?: string | null;
            }[]
          | null;
        bullets?:
          | {
              bullet: string;
              id?: string | null;
            }[]
          | null;
        cards?:
          | {
              question: string;
              answer: string;
              id?: string | null;
            }[]
          | null;
        testimonial?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'faq';
      }
    | {
        layoutType:
          | 'simple-centered'
          | 'split-form'
          | 'bg-image'
          | 'with-map'
          | 'simple-justified'
          | 'split-address'
          | 'simple-illustration'
          | 'stacked-illustration'
          | 'split-social-links'
          | 'split-list';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        bgImage?: number | Media | null;
        form?: {
          formTitle: string;
          fields?:
            | {
                name: string;
                type: 'text' | 'email' | 'textarea';
                id?: string | null;
              }[]
            | null;
        };
        map?: {
          mapTitle: string;
          mapUrl: string;
        };
        address?: {
          title: string;
          lines?:
            | {
                line: string;
                id?: string | null;
              }[]
            | null;
        };
        illustration?: number | Media | null;
        socialLinks?:
          | {
              platform: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        listItems?:
          | {
              item: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'contact';
      }
    | {
        layoutType:
          | 'simple-centered'
          | 'split-image'
          | 'background-image'
          | 'simple-list'
          | 'with-cards'
          | 'split-description'
          | 'with-icons'
          | 'with-text';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        backgroundImage?: number | Media | null;
        imageUrl?: number | Media | null;
        stats?:
          | {
              label: string;
              value: string;
              icon?: number | Media | null;
              id?: string | null;
            }[]
          | null;
        cards?:
          | {
              title: string;
              description: string;
              icon?: number | Media | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'stats';
      }
    | {
        layoutType:
          | 'simple-centered'
          | 'simple-list'
          | 'split-image'
          | 'background-image'
          | 'grid-background'
          | 'grid-images'
          | 'logo-grid'
          | 'alternating-background'
          | 'sidebar'
          | 'video';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        backgroundImage?: number | Media | null;
        imageUrl?: number | Media | null;
        logoGrid?:
          | {
              logo: number | Media;
              id?: string | null;
            }[]
          | null;
        testimonials?:
          | {
              quote: string;
              authorName: string;
              authorTitle?: string | null;
              authorImage?: number | Media | null;
              companyLogo?: number | Media | null;
              id?: string | null;
            }[]
          | null;
        videoUrl?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'testimonials';
      }
    | {
        layoutType:
          | 'simple-centered'
          | 'simple-grid'
          | 'comparison'
          | 'feature-list'
          | 'toggle'
          | 'background'
          | 'split-image'
          | 'simple-list';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        backgroundImage?: number | Media | null;
        imageUrl?: number | Media | null;
        pricingPlans?:
          | {
              planName: string;
              price: string;
              features?:
                | {
                    feature: string;
                    id?: string | null;
                  }[]
                | null;
              cta: string;
              ctaUrl: string;
              id?: string | null;
            }[]
          | null;
        comparisonTable?: {
          columns?:
            | {
                columnName: string;
                id?: string | null;
              }[]
            | null;
          rows?:
            | {
                rowName: string;
                values?:
                  | {
                      value: string;
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
        };
        toggleOptions?: {
          option1: string;
          option2: string;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricing';
      }
    | {
        layoutType:
          | 'simple-centered'
          | 'with-image'
          | 'background-image'
          | 'split-image'
          | 'split-columns'
          | 'simple-justified'
          | 'stacked-image'
          | 'split-form';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        imageUrl?: number | Media | null;
        backgroundImage?: number | Media | null;
        form?: {
          formTitle: string;
          formFields?:
            | {
                fieldName: string;
                fieldType: 'text' | 'email';
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'newsletter';
      }
    | {
        layoutType:
          | 'simple-centered'
          | 'centered-background'
          | 'split-image'
          | 'with-cta'
          | 'with-video'
          | 'simple-search'
          | 'simple-logo'
          | 'stacked-background'
          | 'logo-grid';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        backgroundImage?: number | Media | null;
        imageUrl?: number | Media | null;
        videoUrl?: string | null;
        cta?: {
          ctaLabel: string;
          ctaUrl: string;
        };
        search?: {
          placeholder: string;
        };
        logoGrid?:
          | {
              logo: number | Media;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'header';
      }
    | {
        layoutType:
          | 'simple-list'
          | 'with-sidebar'
          | 'grid-featured-post'
          | 'grid-sidebar'
          | 'list-featured-post'
          | 'list-image'
          | 'split-image'
          | 'grid-categories'
          | 'list-tags'
          | 'grid-load-more'
          | 'grid-pagination'
          | 'masonry-grid';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        image?: number | Media | null;
        loadMore?: string | null;
        pagination?: {
          previousText: string;
          nextText: string;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'blog';
      }
    | {
        layoutType:
          | 'simple-grid'
          | 'simple-centered'
          | 'background-color'
          | 'split-grid'
          | 'split-background-image'
          | 'centered-description'
          | 'grid-overlap'
          | 'stacked-cta'
          | 'alternating-background'
          | 'light-background';
        title: string;
        subtitle?: string | null;
        description?: string | null;
        backgroundColor?: string | null;
        backgroundImage?: number | Media | null;
        cta?: {
          ctaLabel: string;
          ctaUrl: string;
        };
        logos?:
          | {
              logo: number | Media;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'logo-clouds';
      }
    | {
        layoutType:
          | 'simple-centered'
          | 'company-info'
          | 'newsletter-form'
          | 'split-logo'
          | 'centered-links'
          | 'social-media-links'
          | 'split-newsletter'
          | 'simple-links'
          | 'stacked-cta'
          | 'contact-info';
        title?: string | null;
        subtitle?: string | null;
        description?: string | null;
        bg_image?: number | Media | null;
        news_form?: {
          formTitle: string;
          formFields?:
            | {
                fieldName: string;
                fieldType: 'text' | 'email';
                id?: string | null;
              }[]
            | null;
        };
        logo?: number | Media | null;
        links?:
          | {
              linkLabel: string;
              linkUrl: string;
              id?: string | null;
            }[]
          | null;
        media_links?:
          | {
              platform: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        cta?: {
          ctaLabel: string;
          ctaUrl: string;
        };
        contactInfo?: {
          address: string;
          phone: string;
          email: string;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'footer';
      }
  )[];
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  logo: number | Media;
  mode: 'light' | 'dark';
  radius?: ('0' | '0.3' | '0.5' | '0.75' | '1') | null;
  color: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: number;
  background: number | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        subNavItems?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "login".
 */
export interface Login {
  id: number;
  background: number | Media;
  title?: string | null;
  description?: string | null;
  logo?: number | Media | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "register".
 */
export interface Register {
  id: number;
  background: number | Media;
  title?: string | null;
  description?: string | null;
  logo?: number | Media | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resetPassword".
 */
export interface ResetPassword {
  id: number;
  background: number | Media;
  title?: string | null;
  description?: string | null;
  logo?: number | Media | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forgotPassword".
 */
export interface ForgotPassword {
  id: number;
  background: number | Media;
  title?: string | null;
  description?: string | null;
  logo?: number | Media | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}